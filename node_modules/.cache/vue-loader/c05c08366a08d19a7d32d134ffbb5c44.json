{"remainingRequest":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tusimegodwin/Downloads/stanbic-properties/src/components/HomeComponent.vue?vue&type=template&id=27cdb7de&scoped=true&","dependencies":[{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/src/components/HomeComponent.vue","mtime":1628751506483},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}