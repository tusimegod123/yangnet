{"remainingRequest":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js!/Users/tusimegodwin/Downloads/stanbic-properties/src/store/buyerModule.js","dependencies":[{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/src/store/buyerModule.js","mtime":1628751506488},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tusimegodwin/Downloads/stanbic-properties/src/store/buyerModule.js"],"names":["PropertyVisualsService","PropertyNearbyLandmarkService","NeighborhoodVisualsService","state","propertyVisuals","singlePropertyVisuals","singlePropertyNearbyLandmarkVisuals","singleNeighborhoodVisuals","latestProperties","getters","allPropertyVisuals","allSinglePropertyVisuals","allSinglePropertyNearbyLandmarkVisuals","allSingleNeighborhoodVisuals","allLatestProperties","actions","fetchPropertyVisuals","commit","getAllPropertyVisuals","response","data","result","Error","fetchLatestPropertyVisuals","getLatestPropertyVisuals","fetchSinglePropertyVisuals","property_id","getPropertyVisualsByPropertyId","fetchPropertyNearbyLandmarkVisuals","getPropertyNearbyLandmarkByPropertyId","fetchPropertyNeighborhoodVisuals","getNeighborhoodVisualsByPropertyId","mutations","setPropertyVisuals","returnedVisuals","setSinglePropertyVisuals","returnedSinglePropertyVisuals","setSinglePropertyNearbyLandmarkVisuals","returnedSinglePropertyLandmarkVisuals","setSinglePropertyNeighborhoodVisuals","returnedSinglePropertyNeighborhoodVisuals","setLatestPropertyVisuals","returnedLatestProperties"],"mappings":"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","sourcesContent":["import PropertyVisualsService from '@/service/propertyVisuals';\nimport PropertyNearbyLandmarkService from '@/service/propertyNearbyLandmark';\nimport NeighborhoodVisualsService from '@/service/neighborhoodVisuals';\n\nconst state = {\n    propertyVisuals: [],\n    singlePropertyVisuals: [],\n    singlePropertyNearbyLandmarkVisuals: [],\n    singleNeighborhoodVisuals: [],\n    latestProperties: []\n}\n\nconst getters = {\n    allPropertyVisuals: (state) => state.propertyVisuals,\n    allSinglePropertyVisuals: (state) => state.singlePropertyVisuals,\n    allSinglePropertyNearbyLandmarkVisuals: (state) => state.singlePropertyNearbyLandmarkVisuals,\n    allSingleNeighborhoodVisuals: (state) => state.singleNeighborhoodVisuals,\n    allLatestProperties: (state) => state.latestProperties\n};\n\nconst actions = {\n    async fetchPropertyVisuals({ commit }) {\n        try {\n            const response = await PropertyVisualsService.getAllPropertyVisuals();\n            commit('setPropertyVisuals', response.data.result);\n        } catch (error) {\n            throw new Error(\"Failed on loading current properties\")\n        }\n    },\n    async fetchLatestPropertyVisuals({ commit }) {\n        try {\n            const response = await PropertyVisualsService.getLatestPropertyVisuals();\n            commit('setLatestPropertyVisuals', response.data.result);\n        } catch (error) {\n            throw new Error(\"Failed on loading latest properties\")\n        }\n    },\n    async fetchSinglePropertyVisuals({ commit }, property_id){\n        try {\n            const response = await PropertyVisualsService.getPropertyVisualsByPropertyId(property_id);\n            commit(\"setSinglePropertyVisuals\", response.data.result);\n        } catch (error) {\n            throw new Error(\"Failed on loading current property visuals\")\n        }\n    },\n    async fetchPropertyNearbyLandmarkVisuals({ commit }, property_id){\n        try {\n            const response = await PropertyNearbyLandmarkService.getPropertyNearbyLandmarkByPropertyId(property_id);\n            commit(\"setSinglePropertyNearbyLandmarkVisuals\", response.data.result);\n        } catch (error) {\n            throw new Error(\"Failed on loading current property visuals\")\n        }\n    },\n    async fetchPropertyNeighborhoodVisuals({ commit }, property_id){\n        try {\n            const response = await NeighborhoodVisualsService.getNeighborhoodVisualsByPropertyId(property_id);\n            commit(\"setSinglePropertyNeighborhoodVisuals\", response.data.result);\n        } catch (error) {\n            throw new Error(\"Failed on loading current property visuals\")\n        }\n    }\n}\n\nconst mutations = {\n    setPropertyVisuals: (state, returnedVisuals) => (state.propertyVisuals = returnedVisuals),\n    setSinglePropertyVisuals: (state, returnedSinglePropertyVisuals) => (state.singlePropertyVisuals = returnedSinglePropertyVisuals),\n    setSinglePropertyNearbyLandmarkVisuals: (state, returnedSinglePropertyLandmarkVisuals) => (state.singlePropertyNearbyLandmarkVisuals = returnedSinglePropertyLandmarkVisuals),\n    setSinglePropertyNeighborhoodVisuals: (state, returnedSinglePropertyNeighborhoodVisuals) => (state.singleNeighborhoodVisuals = returnedSinglePropertyNeighborhoodVisuals),\n    setLatestPropertyVisuals: (state, returnedLatestProperties) => (state.latestProperties = returnedLatestProperties)\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}