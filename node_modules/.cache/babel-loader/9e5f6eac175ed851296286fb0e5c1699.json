{"remainingRequest":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js!/Users/tusimegodwin/Downloads/stanbic-properties/src/service/vendors/vendorsBackOfficeService.js","dependencies":[{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/src/service/vendors/vendorsBackOfficeService.js","mtime":1628751506487},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy90dXNpbWVnb2R3aW4vRG93bmxvYWRzL3N0YW5iaWMtcHJvcGVydGllcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IEFQSSBmcm9tICcuLi8uLi9jb25maWcvY29ubmVjdGlvbnMnOyAvLyBuZWlnaGJvcmhvb2QgdmlzdWFscwoKZXhwb3J0IGRlZmF1bHQgewogIGdldFZlbmRvcnNDYXRlZ29yaWVzOiBmdW5jdGlvbiBnZXRWZW5kb3JzQ2F0ZWdvcmllcygpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBBUEkudmVuZG9yc0FwaS5nZXQoIi92ZW5kb3ItY2F0ZWdvcmllcyIpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDc7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FuIGVycm9yIG9jY3VyZWQgd2hlbiByZXRyaWV2aW5nIGRhdGEnKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgN11dKTsKICAgIH0pKSgpOwogIH0sCiAgcG9zdFByb2Zlc3Npb25hbDogZnVuY3Rpb24gcG9zdFByb2Zlc3Npb25hbCh2ZW5kb3JzUHJvZmVzc2lvbikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBBUEkudmVuZG9yc0FwaS5wb3N0KCcvdmVuZG9ycy9zZWxmLXJlZ2lzdGVyJywgdmVuZG9yc1Byb2Zlc3Npb24pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA4OwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FuIGVycm9yIG9jY3VyZWQgd2hlbiBzZW5kaW5nIGRhdGEnKTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1swLCA4XV0pOwogICAgfSkpKCk7CiAgfSwKICBnZXRWZW5kb3JzOiBmdW5jdGlvbiBnZXRWZW5kb3JzKCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBBUEkudmVuZG9yc0FwaS5nZXQoIi92ZW5kb3JzL3ZldHRlZC12ZW5kb3JzIik7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNzsKICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBbiBlcnJvciBvY2N1cmVkIHdoZW4gcmV0cmlldmluZyBkYXRhJyk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMCwgN11dKTsKICAgIH0pKSgpOwogIH0sCiAgbGlrZUFWZW5kb3I6IGZ1bmN0aW9uIGxpa2VBVmVuZG9yKGRhdGEpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gQVBJLnZlbmRvcnNBcGkucG9zdCgiL3ZlbmRvcnMvYWRkLXBvaW50cy8iLmNvbmNhdChkYXRhLnZlbmRvcl9pZCwgIi8iKS5jb25jYXQoZGF0YS5saWtlZF9ieSkpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDc7CiAgICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIC8vY29uc29sZS5sb2coZXJyb3IpCiAgICAgICAgICAgICAgYWxlcnQoX2NvbnRleHQ0LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCwgbnVsbCwgW1swLCA3XV0pOwogICAgfSkpKCk7CiAgfSwKICB1bkxpa2VBVmVuZG9yOiBmdW5jdGlvbiB1bkxpa2VBVmVuZG9yKGRhdGEpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gQVBJLnZlbmRvcnNBcGkucG9zdCgiL3ZlbmRvcnMvZGVkdWN0LXBvaW50cy8iLmNvbmNhdChkYXRhLnZlbmRvcl9pZCwgIi8iKS5jb25jYXQoZGF0YS5kaXNsaWtlZF9ieSkpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ1LnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBfY29udGV4dDUucHJldiA9IDc7CiAgICAgICAgICAgICAgX2NvbnRleHQ1LnQwID0gX2NvbnRleHQ1WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0NS50MCk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTUsIG51bGwsIFtbMCwgN11dKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["/Users/tusimegodwin/Downloads/stanbic-properties/src/service/vendors/vendorsBackOfficeService.js"],"names":["API","getVendorsCategories","vendorsApi","get","response","Error","postProfessional","vendorsProfession","post","console","log","getVendors","likeAVendor","data","vendor_id","liked_by","alert","unLikeAVendor","disliked_by"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,0BAAhB,C,CACA;;AACA,eAAe;AACPC,EAAAA,oBADO,kCACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEHD,GAAG,CAACE,UAAJ,CAAeC,GAAf,sBAFG;;AAAA;AAEpBC,cAAAA,QAFoB;AAAA,+CAGnBA,QAHmB;;AAAA;AAAA;AAAA;AAAA,oBAKpB,IAAIC,KAAJ,CAAU,uCAAV,CALoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO7B,GARY;AASPC,EAAAA,gBATO,4BASWC,iBATX,EAS8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEhBP,GAAG,CAACE,UAAJ,CAAeM,IAAf,CAAoB,wBAApB,EAA8CD,iBAA9C,CAFgB;;AAAA;AAEjCH,cAAAA,QAFiC;AAGvCK,cAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAHuC,gDAIhCA,QAJgC;;AAAA;AAAA;AAAA;AAAA,oBAMjC,IAAIC,KAAJ,CAAU,oCAAV,CANiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ1C,GAjBY;AAkBTM,EAAAA,UAlBS,wBAkBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAESX,GAAG,CAACE,UAAJ,CAAeC,GAAf,2BAFT;;AAAA;AAERC,cAAAA,QAFQ;AAAA,gDAGPA,QAHO;;AAAA;AAAA;AAAA;AAAA,oBAKR,IAAIC,KAAJ,CAAU,uCAAV,CALQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOjB,GAzBY;AA0BPO,EAAAA,WA1BO,uBA0BMC,IA1BN,EA0BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEEb,GAAG,CAACE,UAAJ,CAAeM,IAAf,+BAA2CK,IAAI,CAACC,SAAhD,cAA6DD,IAAI,CAACE,QAAlE,EAFF;;AAAA;AAEfX,cAAAA,QAFe;AAAA,gDAGdA,QAHc;;AAAA;AAAA;AAAA;AAKrB;AACAY,cAAAA,KAAK,cAAL;;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQxB,GAlCY;AAmCPC,EAAAA,aAnCO,yBAmCQJ,IAnCR,EAmCc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEAb,GAAG,CAACE,UAAJ,CAAeM,IAAf,kCAA8CK,IAAI,CAACC,SAAnD,cAAgED,IAAI,CAACK,WAArE,EAFA;;AAAA;AAEjBd,cAAAA,QAFiB;AAAA,gDAGhBA,QAHgB;;AAAA;AAAA;AAAA;AAKvBK,cAAAA,OAAO,CAACC,GAAR;;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO1B;AA1CY,CAAf","sourcesContent":["import API from '../../config/connections'\n// neighborhood visuals\nexport default {\n  async getVendorsCategories () {\n    try {\n      const response = await API.vendorsApi.get(`/vendor-categories`)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when retrieving data')\n    }\n  },\n  async postProfessional (vendorsProfession) {\n    try {\n      const response = await API.vendorsApi.post('/vendors/self-register', vendorsProfession)\n      console.log(response);\n      return response\n    } catch (error) {\n      throw new Error('An error occured when sending data')\n    }\n  },\nasync getVendors () {\n    try {\n      const response = await API.vendorsApi.get(`/vendors/vetted-vendors`)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when retrieving data')\n    }\n  },\n  async likeAVendor (data) {\n    try {\n      const response = await API.vendorsApi.post(`/vendors/add-points/${data.vendor_id}/${data.liked_by}`)\n      return response\n    } catch (error) {\n      //console.log(error)\n      alert(error)\n    }\n  },\n  async unLikeAVendor (data) {\n    try {\n      const response = await API.vendorsApi.post(`/vendors/deduct-points/${data.vendor_id}/${data.disliked_by}`)\n      return response\n    } catch (error) {\n      console.log(error)\n    }\n  },\n}\n"]}]}