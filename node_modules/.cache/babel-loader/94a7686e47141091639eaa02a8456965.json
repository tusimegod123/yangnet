{"remainingRequest":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js!/Users/tusimegodwin/Downloads/stanbic-properties/src/store/authModule.js","dependencies":[{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/src/store/authModule.js","mtime":1628227685716},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy90dXNpbWVnb2R3aW4vRG93bmxvYWRzL3N0YW5iaWMtcHJvcGVydGllcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IEF1dGhTZXJ2aWNlIGZyb20gJ0Avc2VydmljZS9hdXRoU2VydmljZSc7CnZhciBzdGF0ZSA9IHsKICByZWdpc3RlcmluZ1VzZXI6IFtdCn07CnZhciBnZXR0ZXJzID0gewogIGN1cnJlbnRSZWdpc3RlcmluZ1VzZXI6IGZ1bmN0aW9uIGN1cnJlbnRSZWdpc3RlcmluZ1VzZXIoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5yZWdpc3RlcmluZ1VzZXI7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBzaWdudXBBTmV3VXNlcjogZnVuY3Rpb24gc2lnbnVwQU5ld1VzZXIoX3JlZiwgbmV3VXNlcikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gQXV0aFNlcnZpY2Uuc2lnbnVwQU5ld1VzZXIobmV3VXNlcik7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0UmVnaXN0ZXJlZFVzZXInLCByZXNwb25zZS5kYXRhLnJlc3VsdCk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA5OwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJGYWlsZWQgb24gc2F2ZWQgbmV3IFVzZXIiKTsKCiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgOV1dKTsKICAgIH0pKSgpOwogIH0sCiAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKF8sIHVzZXJEZXRhaWxzKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEF1dGhTZXJ2aWNlLmxvZ2dpbmdVc2VyKHVzZXJEZXRhaWxzKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0b2tlbicsIHJlc3BvbnNlLmRhdGEudG9rZW4pOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDg7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQW4gZXJyb3Igb2NjdXJlZCB3aGVuIHNlbmRpbmcgZGF0YScpOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDhdXSk7CiAgICB9KSkoKTsKICB9LAogIHVwZGF0ZVVzZXI6IGZ1bmN0aW9uIHVwZGF0ZVVzZXIoXywgdXNlckRldGFpbHMpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gQXV0aFNlcnZpY2UudXBkYXRlVXNlclByb2ZpbGUodXNlckRldGFpbHMpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDc7CiAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQW4gZXJyb3Igb2NjdXJlZCB3aGVuIHNlbmRpbmcgZGF0YScpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzAsIDddXSk7CiAgICB9KSkoKTsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgc2V0UmVnaXN0ZXJlZFVzZXI6IGZ1bmN0aW9uIHNldFJlZ2lzdGVyZWRVc2VyKHN0YXRlLCByZXR1cm5lZFVzZXIpIHsKICAgIHJldHVybiBzdGF0ZS5yZWdpc3RlcmluZ1VzZXIgPSByZXR1cm5lZFVzZXI7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/Users/tusimegodwin/Downloads/stanbic-properties/src/store/authModule.js"],"names":["AuthService","state","registeringUser","getters","currentRegisteringUser","actions","signupANewUser","newUser","commit","response","data","result","Error","login","_","userDetails","loggingUser","status","localStorage","setItem","token","updateUser","updateUserProfile","mutations","setRegisteredUser","returnedUser"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,uBAAxB;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,eAAe,EAAE;AADP,CAAd;AAIA,IAAMC,OAAO,GAAG;AACZC,EAAAA,sBAAsB,EAAE,gCAACH,KAAD;AAAA,WAAWA,KAAK,CAACC,eAAjB;AAAA;AADZ,CAAhB;AAIA,IAAMG,OAAO,GAAG;AACNC,EAAAA,cADM,gCACqBC,OADrB,EAC8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnBC,cAAAA,MAAmB,QAAnBA,MAAmB;AAAA;AAAA;AAAA,qBAEXR,WAAW,CAACM,cAAZ,CAA2BC,OAA3B,CAFW;;AAAA;AAE5BE,cAAAA,QAF4B;AAGlCD,cAAAA,MAAM,CAAC,mBAAD,EAAsBC,QAAQ,CAACC,IAAT,CAAcC,MAApC,CAAN;AAHkC,+CAI3BF,QAJ2B;;AAAA;AAAA;AAAA;AAAA,oBAM5B,IAAIG,KAAJ,CAAU,0BAAV,CAN4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQzC,GATW;AAUNC,EAAAA,KAVM,iBAUCC,CAVD,EAUIC,WAVJ,EAUiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEAf,WAAW,CAACgB,WAAZ,CAAwBD,WAAxB,CAFA;;AAAA;AAEjBN,cAAAA,QAFiB;;AAGvB,kBAAGA,QAAQ,CAACQ,MAAT,KAAmB,GAAtB,EAA0B;AACtBC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BV,QAAQ,CAACC,IAAT,CAAcU,KAA5C;AACH;;AALsB,gDAOhBX,QAPgB;;AAAA;AAAA;AAAA;AAAA,oBASjB,IAAIG,KAAJ,CAAU,oCAAV,CATiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW1B,GArBS;AAsBJS,EAAAA,UAtBI,sBAsBQP,CAtBR,EAsBWC,WAtBX,EAsBwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAELf,WAAW,CAACsB,iBAAZ,CAA8BP,WAA9B,CAFK;;AAAA;AAEtBN,cAAAA,QAFsB;AAAA,gDAGrBA,QAHqB;;AAAA;AAAA;AAAA;AAAA,oBAKxB,IAAIG,KAAJ,CAAU,oCAAV,CALwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOjC;AA7BS,CAAhB;AAgCA,IAAMW,SAAS,GAAG;AACdC,EAAAA,iBAAiB,EAAE,2BAACvB,KAAD,EAAQwB,YAAR;AAAA,WAA0BxB,KAAK,CAACC,eAAN,GAAwBuB,YAAlD;AAAA;AADL,CAAlB;AAIA,eAAe;AACXxB,EAAAA,KAAK,EAALA,KADW;AAEXE,EAAAA,OAAO,EAAPA,OAFW;AAGXE,EAAAA,OAAO,EAAPA,OAHW;AAIXkB,EAAAA,SAAS,EAATA;AAJW,CAAf","sourcesContent":["import AuthService from '@/service/authService'\n\nconst state = {\n    registeringUser: []\n}\n\nconst getters = {\n    currentRegisteringUser: (state) => state.registeringUser\n};\n\nconst actions = {\n    async signupANewUser({ commit }, newUser) {\n        try {\n            const response = await AuthService.signupANewUser(newUser);\n            commit('setRegisteredUser', response.data.result);\n            return response;\n        } catch (error) {\n            throw new Error(\"Failed on saved new User\")\n        }\n    },\n    async login (_, userDetails) {\n        try {\n          const response = await AuthService.loggingUser(userDetails);\n          if(response.status ===200){\n              localStorage.setItem('token', response.data.token);\n          }\n\n          return response\n        } catch (error) {\n          throw new Error('An error occured when sending data')\n        }\n      },\n      async updateUser (_, userDetails) {\n        try {\n            const response = await AuthService.updateUserProfile(userDetails);\n            return response\n        } catch (error) {\n          throw new Error('An error occured when sending data')\n        }\n      }\n}\n\nconst mutations = {\n    setRegisteredUser: (state, returnedUser) => (state.registeringUser = returnedUser)\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}