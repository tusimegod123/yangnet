{"remainingRequest":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js!/Users/tusimegodwin/Downloads/stanbic-properties/src/service/neighborhoodVisuals.js","dependencies":[{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/src/service/neighborhoodVisuals.js","mtime":1628227685714},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy90dXNpbWVnb2R3aW4vRG93bmxvYWRzL3N0YW5iaWMtcHJvcGVydGllcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IEFQSSBmcm9tICcuLi9jb25maWcvY29ubmVjdGlvbnMnOyAvLyBuZWlnaGJvcmhvb2QgdmlzdWFscwoKZXhwb3J0IGRlZmF1bHQgewogIGdldE5laWdoYm9yaG9vZFZpc3VhbHNCeUlkOiBmdW5jdGlvbiBnZXROZWlnaGJvcmhvb2RWaXN1YWxzQnlJZChuZWlnaGJvcmhvb2RfdmlzdWFsc19pZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEFQSS5uZWlnaGJvcmhvb2RWaXN1YWxzQXBpLmdldCgiL25laWdoYm9yaG9vZC12aXN1YWxzLyIuY29uY2F0KG5laWdoYm9yaG9vZF92aXN1YWxzX2lkKSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNzsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQW4gZXJyb3Igb2NjdXJlZCB3aGVuIHJldHJpZXZpbmcgZGF0YScpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCA3XV0pOwogICAgfSkpKCk7CiAgfSwKICBwb3N0TmVpZ2hib3Job29kVmlzdWFsczogZnVuY3Rpb24gcG9zdE5laWdoYm9yaG9vZFZpc3VhbHMobmVpZ2hib3Job29kVmlzdWFscykgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBBUEkubmVpZ2hib3Job29kVmlzdWFsc0FwaS5wb3N0KCcvbmVpZ2hib3Job29kLXZpc3VhbHMnLCBuZWlnaGJvcmhvb2RWaXN1YWxzKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA3OwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FuIGVycm9yIG9jY3VyZWQgd2hlbiBzZW5kaW5nIGRhdGEnKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1swLCA3XV0pOwogICAgfSkpKCk7CiAgfSwKICB1cGRhdGVBUHJvcGVydHk6IGZ1bmN0aW9uIHVwZGF0ZUFQcm9wZXJ0eShuZWlnaGJvcmhvb2RWaXN1YWxzKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEFQSS5uZWlnaGJvcmhvb2RWaXN1YWxzQXBpLnB1dCgiL25laWdoYm9yaG9vZC12aXN1YWxzLyIuY29uY2F0KG5laWdoYm9yaG9vZFZpc3VhbHMubmVpZ2hib3Job29kX3Zpc3VhbHNfaWQpLCBuZWlnaGJvcmhvb2RWaXN1YWxzKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSA3OwogICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgwKTsKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FuIGVycm9yIG9jY3VyZWQgd2hlbiB1cGRhdGluZyBkYXRhJyk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMCwgN11dKTsKICAgIH0pKSgpOwogIH0sCiAgZGVsZXRlQVByb3BlcnR5OiBmdW5jdGlvbiBkZWxldGVBUHJvcGVydHkobmVpZ2hib3Job29kVmlzdWFscykgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBBUEkubmVpZ2hib3Job29kVmlzdWFsc0FwaS5kZWxldGUoIi9uZWlnaGJvcmhvb2QtdmlzdWFscy8iLmNvbmNhdChuZWlnaGJvcmhvb2RWaXN1YWxzLm5laWdoYm9yaG9vZF92aXN1YWxzX2lkKSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gNzsKICAgICAgICAgICAgICBfY29udGV4dDQudDAgPSBfY29udGV4dDRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBbiBlcnJvciBvY2N1cmVkIHdoZW4gZGVsZXRpbmcgZGF0YScpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0LCBudWxsLCBbWzAsIDddXSk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["/Users/tusimegodwin/Downloads/stanbic-properties/src/service/neighborhoodVisuals.js"],"names":["API","getNeighborhoodVisualsById","neighborhood_visuals_id","neighborhoodVisualsApi","get","response","Error","postNeighborhoodVisuals","neighborhoodVisuals","post","updateAProperty","put","deleteAProperty","delete"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,uBAAhB,C,CACA;;AACA,eAAe;AACPC,EAAAA,0BADO,sCACqBC,uBADrB,EAC8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEhCF,GAAG,CAACG,sBAAJ,CAA2BC,GAA3B,iCAAwDF,uBAAxD,EAFgC;;AAAA;AAEjDG,cAAAA,QAFiD;AAAA,+CAGhDA,QAHgD;;AAAA;AAAA;AAAA;AAAA,oBAKjD,IAAIC,KAAJ,CAAU,uCAAV,CALiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO1D,GARY;AASPC,EAAAA,uBATO,mCASkBC,mBATlB,EASuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEzBR,GAAG,CAACG,sBAAJ,CAA2BM,IAA3B,CAAgC,uBAAhC,EAAyDD,mBAAzD,CAFyB;;AAAA;AAE1CH,cAAAA,QAF0C;AAAA,gDAGzCA,QAHyC;;AAAA;AAAA;AAAA;AAAA,oBAK1C,IAAIC,KAAJ,CAAU,oCAAV,CAL0C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOnD,GAhBY;AAiBPI,EAAAA,eAjBO,2BAiBUF,mBAjBV,EAiB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEjBR,GAAG,CAACG,sBAAJ,CAA2BQ,GAA3B,iCAAwDH,mBAAmB,CAACN,uBAA5E,GAAuGM,mBAAvG,CAFiB;;AAAA;AAElCH,cAAAA,QAFkC;AAAA,gDAGjCA,QAHiC;;AAAA;AAAA;AAAA;AAAA,oBAKlC,IAAIC,KAAJ,CAAU,qCAAV,CALkC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO3C,GAxBY;AAyBPM,EAAAA,eAzBO,2BAyBUJ,mBAzBV,EAyB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEjBR,GAAG,CAACG,sBAAJ,CAA2BU,MAA3B,iCAA2DL,mBAAmB,CAACN,uBAA/E,EAFiB;;AAAA;AAElCG,cAAAA,QAFkC;AAAA,gDAGjCA,QAHiC;;AAAA;AAAA;AAAA;AAAA,oBAKlC,IAAIC,KAAJ,CAAU,qCAAV,CALkC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO3C;AAhCY,CAAf","sourcesContent":["import API from '../config/connections'\n// neighborhood visuals\nexport default {\n  async getNeighborhoodVisualsById (neighborhood_visuals_id) {\n    try {\n      const response = await API.neighborhoodVisualsApi.get(`/neighborhood-visuals/${neighborhood_visuals_id}`)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when retrieving data')\n    }\n  },\n  async postNeighborhoodVisuals (neighborhoodVisuals) {\n    try {\n      const response = await API.neighborhoodVisualsApi.post('/neighborhood-visuals', neighborhoodVisuals)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when sending data')\n    }\n  },\n  async updateAProperty (neighborhoodVisuals) {\n    try {\n      const response = await API.neighborhoodVisualsApi.put(`/neighborhood-visuals/${neighborhoodVisuals.neighborhood_visuals_id}`, neighborhoodVisuals)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when updating data')\n    }\n  },\n  async deleteAProperty (neighborhoodVisuals) {\n    try {\n      const response = await API.neighborhoodVisualsApi.delete(`/neighborhood-visuals/${neighborhoodVisuals.neighborhood_visuals_id}`)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when deleting data')\n    }\n  }\n}\n"]}]}