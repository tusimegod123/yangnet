{"remainingRequest":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js!/Users/tusimegodwin/Downloads/stanbic-properties/src/store/sellerModule.js","dependencies":[{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/src/store/sellerModule.js","mtime":1628751506488},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tusimegodwin/Downloads/stanbic-properties/src/store/sellerModule.js"],"names":["PropertyLocationService","PropertyValueService","PropertyNearbyLandmarkService","NeighborhoodVisualsService","PropertyVisualsService","PropertyService","PropertyTypeService","PropertyFeatureService","PropertyLandmarkTypeService","formatDate","state","propertyTypes","propertyFeatures","propertyLandmarkTypes","propertyFirstPageData","propertySecondPageData","propertyThirdPageData","createdProperty","currentUserListedPropertyVisuals","currentUserUnlistedPropertyVisuals","currentUserUncertifiedPropertyVisuals","getters","allPropertyTypes","allPropertyFeatures","allPropertyLandmarkTypes","allPropertyFirstPageData","allPropertySecondPageData","allPropertyThirdPageData","newCreatedProperty","allCurrentUserListedPropertyVisuals","allCurrentUserUnlistedPropertyVisuals","allCurrentUserUncertifiedPropertyVisuals","actions","fetchPropertyTypes","commit","getPropertyListingTypes","response","data","result","console","log","fetchPropertyFeatures","getAllPropertyFeatures","fetchPropertyLandmarkTypes","getAllPropertyLandmarkTypes","addPropertyDataFromPageOne","propertyDataOne","rootState","newProperty","isListedForId","type","created_by","AuthModule","currentUser","username","updated_by","postAProperty","addPropertyDataFromPageTwo","propertyDataTwo","addPropertyDataFromPageThird","propertyDataFinal","submitAllPropertyData","propertyLocation","name","location","property_id","latitude","longitude","selectedPropertyFeatures","features","propertyVisuals","description","files","visuals","propertyValue","actual_value","expected_value","neighborhoodVisuals","nearbyLandmarkVisuals","landmark_name","distance_from_property","landmark_type_id","landmarkVisuals","postAPropertyLocation","postAPropertyValue","postAPropertyNearbyLandmark","postNeighborhoodVisuals","postPropertyVisuals","propertyVisualResponse","status","Error","getListedPropertyVisualsByUsername","getUnlistedPropertyVisualsByUsername","getUncertifiedPropertyVisualsByUsername","updatePropertyVisualAvailabilityStatus","visualsResponse","updatePropertyVisualNotAvailabilityStatus","mutations","setPropertyTypes","map","propertyType","value","id","text","setPropertyFeatures","propertyFeature","features_id","feature","setPropertyLandkmarkTypes","propertyLandmarkType","landmark_type","setPropertyRegisterFirstData","setPropertyRegisterTwoData","setPropertyRegisterThreeData","propertyDataThree","setCreatedProperty","returnedProperty","setCurrentUserListedPropertyVisuals","returnedCurrentUserListedProperties","currentProperty","when_created","setCurrentUserUnlistedPropertyVisuals","returnedCurrentUserUnlistedProperties","setCurrentUserUncertifiedPropertyVisuals","returnedCurrentUserUncertifiedProperties","updatePropertyVisualsList","filter","currentUserListedPropertyVisual","updatePropertyVisualsUnlist","currentUserUnlistedPropertyVisual"],"mappings":"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","sourcesContent":["import PropertyLocationService from '@/service/propertyLocation';\nimport PropertyValueService from '@/service/propertyValue';\nimport PropertyNearbyLandmarkService from '@/service/propertyNearbyLandmark';\nimport NeighborhoodVisualsService from '@/service/neighborhoodVisuals';\nimport PropertyVisualsService from '@/service/propertyVisuals';\nimport PropertyService from '@/service/property/property';\nimport PropertyTypeService from '@/service/property/propertyListedAs';\nimport PropertyFeatureService from '@/service/propertyFeatures';\nimport PropertyLandmarkTypeService from '@/service/propertyLandmarkTypes';\nimport { formatDate } from '@/helpers/helpers';\n\nconst state = {\n    propertyTypes: [],\n    propertyFeatures: [],\n    propertyLandmarkTypes: [],\n    propertyFirstPageData: null,\n    propertySecondPageData: null,\n    propertyThirdPageData: null,\n    createdProperty: {},\n    currentUserListedPropertyVisuals: [],\n    currentUserUnlistedPropertyVisuals: [],\n    currentUserUncertifiedPropertyVisuals: []\n}\n\nconst getters = {\n    allPropertyTypes: (state) => state.propertyTypes,\n    allPropertyFeatures: (state) => state.propertyFeatures,\n    allPropertyLandmarkTypes: (state) => state.propertyLandmarkTypes,\n    allPropertyFirstPageData: (state) => state.propertyFirstPageData,\n    allPropertySecondPageData: (state) => state.propertySecondPageData,\n    allPropertyThirdPageData: (state) => state.propertyThirdPageData,\n    newCreatedProperty: (state) => state.createdProperty,\n    \n    // current user getters\n    allCurrentUserListedPropertyVisuals: (state) => state.currentUserListedPropertyVisuals,\n    allCurrentUserUnlistedPropertyVisuals: (state) => state.currentUserUnlistedPropertyVisuals,\n    allCurrentUserUncertifiedPropertyVisuals: (state) => state.currentUserUncertifiedPropertyVisuals\n};\n\nconst actions = {\n    async fetchPropertyTypes({ commit }) {\n        try {\n            const response = await PropertyTypeService.getPropertyListingTypes();\n            commit('setPropertyTypes', response.data.result);\n        } catch (error) {\n            console.log(error);\n        }\n    },\n    async fetchPropertyFeatures({ commit }) {\n        try {\n            const response = await PropertyFeatureService.getAllPropertyFeatures();\n            commit('setPropertyFeatures', response.data.result);\n        } catch (error) {\n            console.log(error);\n        }\n    },\n    async fetchPropertyLandmarkTypes({ commit }) {\n        try {\n            const response = await PropertyLandmarkTypeService.getAllPropertyLandmarkTypes();\n            commit('setPropertyLandkmarkTypes', response.data.result);\n        } catch (error) {\n            console.log(error);\n        }\n    },\n    async addPropertyDataFromPageOne({ commit, rootState }, propertyDataOne) {\n            try {\n            await commit('setPropertyRegisterFirstData', propertyDataOne);\n            const newProperty = {\n                isListedForId: propertyDataOne.type,\n                created_by: rootState.AuthModule.currentUser.username,\n                updated_by: rootState.AuthModule.currentUser.username\n            }\n            const response = await PropertyService.postAProperty(newProperty);\n            commit('setCreatedProperty', response.data.result);\n        } catch (error) {\n            console.log(error);\n            // throw new Error('Failed to save property details')\n        }\n    },\n    addPropertyDataFromPageTwo({ commit }, propertyDataTwo) {\n        commit('setPropertyRegisterTwoData', propertyDataTwo);\n    },\n    addPropertyDataFromPageThird({ commit }, propertyDataFinal) {\n        commit('setPropertyRegisterThreeData', propertyDataFinal);\n    },\n    async submitAllPropertyData({ state, rootState }) {\n        try {\n            const propertyLocation = {\n                name: state.propertyFirstPageData.location,\n                property_id: state.createdProperty.property_id,\n                latitude: 19393982,\n                longitude: 1959494,\n                created_by: rootState.AuthModule.currentUser.username,\n                updated_by: rootState.AuthModule.currentUser.username\n            }\n            const selectedPropertyFeatures = {\n                propertyFeatures: state.propertyFirstPageData.features,\n                property_id: state.createdProperty.property_id,\n                created_by: rootState.AuthModule.currentUser.username,\n                updated_by: rootState.AuthModule.currentUser.username\n            }\n            const propertyVisuals = {\n                description: state.propertyFirstPageData.description,\n                files: state.propertyFirstPageData.visuals,\n                property_id: state.createdProperty.property_id,\n                created_by: rootState.AuthModule.currentUser.username,\n                updated_by: rootState.AuthModule.currentUser.username\n            }\n\n            // console.log('visuals', state.propertyFirstPageData.visuals);\n            const propertyValue = {\n                actual_value: state.propertySecondPageData.expected_value,\n                property_id: state.createdProperty.property_id,\n                created_by: rootState.AuthModule.currentUser.username,\n                updated_by: rootState.AuthModule.currentUser.username\n            }\n            \n            const neighborhoodVisuals = {\n                description: state.propertySecondPageData.description,\n                files: state.propertySecondPageData.neighborhoodVisuals,\n                property_id: state.createdProperty.property_id,\n                created_by: rootState.AuthModule.currentUser.username,\n                updated_by: rootState.AuthModule.currentUser.username\n            }\n\n            const nearbyLandmarkVisuals = {\n                landmark_name: state.propertyThirdPageData.landmark_name,\n                distance_from_property: state.propertyThirdPageData.distance_from_property,\n                landmark_type_id: state.propertyThirdPageData.landmark_type_id,\n                description: state.propertyThirdPageData.description,\n                files: state.propertyThirdPageData.landmarkVisuals,\n                property_id: state.createdProperty.property_id,\n                created_by: rootState.AuthModule.currentUser.username,\n                updated_by: rootState.AuthModule.currentUser.username\n            }\n\n            await PropertyLocationService.postAPropertyLocation(propertyLocation);\n            await PropertyValueService.postAPropertyValue(propertyValue);\n            await PropertyNearbyLandmarkService.postAPropertyNearbyLandmark(nearbyLandmarkVisuals);\n            await NeighborhoodVisualsService.postNeighborhoodVisuals(neighborhoodVisuals);\n           const propertyVisualResponse = await PropertyVisualsService.postPropertyVisuals(propertyVisuals);\n            if(propertyVisualResponse.status === 200 || propertyVisualResponse.status === 201){\n                return propertyVisualResponse;\n            }\n        } catch (error) {\n            // this.$swal('ooh!','Unable to finish!','error');\n            throw new Error('Failed to fully create a property');\n        }\n    },\n    async getListedPropertyVisualsByUsername({ commit, rootState }){\n        try {\n            let username = rootState.AuthModule.currentUser.username;\n            const response = await PropertyVisualsService.getListedPropertyVisualsByUsername(username);\n            commit('setCurrentUserListedPropertyVisuals', response.data.result);\n        } catch (error) {\n            throw new Error(error);\n        }\n    },\n    async getUnlistedPropertyVisualsByUsername({ commit, rootState }){\n        try {\n            let username = rootState.AuthModule.currentUser.username;\n            const response = await PropertyVisualsService.getUnlistedPropertyVisualsByUsername(username);\n            commit('setCurrentUserUnlistedPropertyVisuals', response.data.result);\n        } catch (error) {\n            throw new Error(error);\n        }\n    },\n    async getUncertifiedPropertyVisualsByUsername({ commit, rootState }){\n        try {\n            let username = rootState.AuthModule.currentUser.username;\n            const response = await PropertyVisualsService.getUncertifiedPropertyVisualsByUsername(username);\n            commit('setCurrentUserUncertifiedPropertyVisuals', response.data.result);\n        } catch (error) {\n            throw new Error(error);\n        }\n    },\n    async updatePropertyVisualAvailabilityStatus({ commit }, property_id){\n        try {\n            const response = await PropertyVisualsService.updatePropertyVisualAvailabilityStatus(property_id);\n            if(response.visualsResponse.status === 200) {\n                commit('updatePropertyVisualsList', property_id);\n            }\n        } catch (error) {\n            throw new Error(error);\n        }\n    },\n    async updatePropertyVisualNotAvailabilityStatus({ commit }, property_id){\n        try {\n            const response = await PropertyVisualsService.updatePropertyVisualAvailabilityStatus(property_id);\n            if(response.visualsResponse.status === 200) {\n                commit('updatePropertyVisualsUnlist', property_id);\n            }\n        } catch (error) {\n            throw new Error(error);\n        }\n    }\n}\n\n// mutations\nconst mutations = {\n    setPropertyTypes: (state, propertyTypes) => (state.propertyTypes = propertyTypes.map(propertyType => {\n        return {\n            value: propertyType.id,\n            text: propertyType.name\n        }\n    })),\n    setPropertyFeatures: (state, propertyFeatures) => (state.propertyFeatures = propertyFeatures.map(propertyFeature => {\n        return {\n            value: propertyFeature.features_id,\n            text: propertyFeature.feature\n        }\n    })),\n    setPropertyLandkmarkTypes: (state, propertyLandmarkTypes) => (state.propertyLandmarkTypes = propertyLandmarkTypes.map(propertyLandmarkType => {\n        return {\n            value: propertyLandmarkType.landmark_type_id,\n            text: propertyLandmarkType.landmark_type\n        }\n    })),\n    setPropertyRegisterFirstData: (state, propertyDataOne) => (state.propertyFirstPageData = propertyDataOne),\n    setPropertyRegisterTwoData: (state, propertyDataTwo) => (state.propertySecondPageData = propertyDataTwo),\n    setPropertyRegisterThreeData: (state, propertyDataThree) => (state.propertyThirdPageData = propertyDataThree),\n    setCreatedProperty: (state, returnedProperty) => (state.createdProperty = returnedProperty),\n    setCurrentUserListedPropertyVisuals: (state, returnedCurrentUserListedProperties) => (state.currentUserListedPropertyVisuals = returnedCurrentUserListedProperties.map(currentProperty => {\n        return {\n            property_id: currentProperty.property_id,\n            description: currentProperty.description,\n            created_by: currentProperty.created_by,\n            when_created: formatDate(currentProperty.when_created)\n        }\n    })),\n    setCurrentUserUnlistedPropertyVisuals: (state, returnedCurrentUserUnlistedProperties) => (state.currentUserUnlistedPropertyVisuals = returnedCurrentUserUnlistedProperties.map(currentProperty => {\n        return {\n            property_id: currentProperty.property_id,\n            description: currentProperty.description,\n            created_by: currentProperty.created_by,\n            when_created: formatDate(currentProperty.when_created)\n        }\n    })),\n    setCurrentUserUncertifiedPropertyVisuals: (state, returnedCurrentUserUncertifiedProperties) => (state.currentUserUncertifiedPropertyVisuals = returnedCurrentUserUncertifiedProperties.map(currentProperty => {\n        return {\n            property_id: currentProperty.property_id,\n            description: currentProperty.description,\n            created_by: currentProperty.created_by,\n            when_created: formatDate(currentProperty.when_created)\n        }\n    })),\n    updatePropertyVisualsList: (state, property_id) => state.currentUserListedPropertyVisuals = state.currentUserListedPropertyVisuals.filter(currentUserListedPropertyVisual => currentUserListedPropertyVisual.property_id !== property_id),\n    updatePropertyVisualsUnlist: (state, property_id) => state.currentUserUnlistedPropertyVisuals = state.currentUserUnlistedPropertyVisuals.filter(currentUserUnlistedPropertyVisual => currentUserUnlistedPropertyVisual.property_id !== property_id)\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}\n\n/**\ncontext : {\n    state,      // same as `store.state`, or local state if in modules\n    rootState,  // same as `store.state`, only in modules\n    commit,     // same as `store.commit`\n    dispatch,   // same as `store.dispatch`\n    getters,    // same as `store.getters`, or local getters if in modules\n    rootGetters // same as `store.getters`, only in modules\n  } \n  https://vuex.vuejs.org/api/#mutations\n*/"]}]}