{"remainingRequest":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js!/Users/tusimegodwin/Downloads/stanbic-properties/src/service/propertyNearbyLandmark.js","dependencies":[{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/src/service/propertyNearbyLandmark.js","mtime":1628227685715},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy90dXNpbWVnb2R3aW4vRG93bmxvYWRzL3N0YW5iaWMtcHJvcGVydGllcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IEFQSSBmcm9tICcuLi9jb25maWcvY29ubmVjdGlvbnMnOyAvLyBwcm9wZXJ0eS1uZWFyYnktbGFuZG1hcmtzCgpleHBvcnQgZGVmYXVsdCB7CiAgZ2V0QVByb3BlcnR5TmVhcmJ5TGFuZG1hcmtCeUlkOiBmdW5jdGlvbiBnZXRBUHJvcGVydHlOZWFyYnlMYW5kbWFya0J5SWQocHJvcGVydHlfbmVhcmJ5X2xhbmRtYXJrX2lkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gQVBJLnByb3BlcnR5TmVhcmJ5TGFuZG1hcmtBcGkuZ2V0KCIvcHJvcGVydHktbmVhcmJ5LWxhbmRtYXJrcy8iLmNvbmNhdChwcm9wZXJ0eV9uZWFyYnlfbGFuZG1hcmtfaWQpKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBbiBlcnJvciBvY2N1cmVkIHdoZW4gcmV0cmlldmluZyBkYXRhJyk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDddXSk7CiAgICB9KSkoKTsKICB9LAogIHBvc3RBUHJvcGVydHlOZWFyYnlMYW5kbWFyazogZnVuY3Rpb24gcG9zdEFQcm9wZXJ0eU5lYXJieUxhbmRtYXJrKHByb3BlcnR5TmVhcmJ5TGFuZG1hcmspIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gQVBJLnByb3BlcnR5TmVhcmJ5TGFuZG1hcmtBcGkucG9zdCgnL3Byb3BlcnR5LW5lYXJieS1sYW5kbWFya3MnLCBwcm9wZXJ0eU5lYXJieUxhbmRtYXJrKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA3OwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FuIGVycm9yIG9jY3VyZWQgd2hlbiBzZW5kaW5nIGRhdGEnKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1swLCA3XV0pOwogICAgfSkpKCk7CiAgfSwKICB1cGRhdGVBUHJvcGVydHlOZWFyYnlMYW5kbWFyazogZnVuY3Rpb24gdXBkYXRlQVByb3BlcnR5TmVhcmJ5TGFuZG1hcmsocHJvcGVydHlOZWFyYnlMYW5kbWFyaykgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBBUEkucHJvcGVydHlOZWFyYnlMYW5kbWFya0FwaS5wdXQoIi9wcm9wZXJ0eS1uZWFyYnktbGFuZG1hcmtzLyIuY29uY2F0KHByb3BlcnR5TmVhcmJ5TGFuZG1hcmsucHJvcGVydHlfbmVhcmJ5X2xhbmRtYXJrX2lkKSwgcHJvcGVydHlOZWFyYnlMYW5kbWFyayk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNzsKICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBbiBlcnJvciBvY2N1cmVkIHdoZW4gdXBkYXRpbmcgZGF0YScpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzAsIDddXSk7CiAgICB9KSkoKTsKICB9LAogIGRlbGV0ZUFQcm9wZXJ0eU5lYXJieUxhbmRtYXJrOiBmdW5jdGlvbiBkZWxldGVBUHJvcGVydHlOZWFyYnlMYW5kbWFyayhwcm9wZXJ0eU5lYXJieUxhbmRtYXJrKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEFQSS5wcm9wZXJ0eU5lYXJieUxhbmRtYXJrQXBpLmRlbGV0ZSgiL3Byb3BlcnR5LW5lYXJieS1sYW5kbWFya3MvIi5jb25jYXQocHJvcGVydHlOZWFyYnlMYW5kbWFyay5wcm9wZXJ0eV9uZWFyYnlfbGFuZG1hcmtfaWQpKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSA3OwogICAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FuIGVycm9yIG9jY3VyZWQgd2hlbiBkZWxldGluZyBkYXRhJyk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTQsIG51bGwsIFtbMCwgN11dKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["/Users/tusimegodwin/Downloads/stanbic-properties/src/service/propertyNearbyLandmark.js"],"names":["API","getAPropertyNearbyLandmarkById","property_nearby_landmark_id","propertyNearbyLandmarkApi","get","response","Error","postAPropertyNearbyLandmark","propertyNearbyLandmark","post","updateAPropertyNearbyLandmark","put","deleteAPropertyNearbyLandmark","delete"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,uBAAhB,C,CACA;;AACA,eAAe;AACPC,EAAAA,8BADO,0CACyBC,2BADzB,EACsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAExCF,GAAG,CAACG,yBAAJ,CAA8BC,GAA9B,sCAAgEF,2BAAhE,EAFwC;;AAAA;AAEzDG,cAAAA,QAFyD;AAAA,+CAGxDA,QAHwD;;AAAA;AAAA;AAAA;AAAA,oBAKzD,IAAIC,KAAJ,CAAU,uCAAV,CALyD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOlE,GARY;AASPC,EAAAA,2BATO,uCASsBC,sBATtB,EAS8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEhCR,GAAG,CAACG,yBAAJ,CAA8BM,IAA9B,CAAmC,4BAAnC,EAAiED,sBAAjE,CAFgC;;AAAA;AAEjDH,cAAAA,QAFiD;AAAA,gDAGhDA,QAHgD;;AAAA;AAAA;AAAA;AAAA,oBAKjD,IAAIC,KAAJ,CAAU,oCAAV,CALiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO1D,GAhBY;AAiBPI,EAAAA,6BAjBO,yCAiBwBF,sBAjBxB,EAiBgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAElCR,GAAG,CAACG,yBAAJ,CAA8BQ,GAA9B,sCAAgEH,sBAAsB,CAACN,2BAAvF,GAAsHM,sBAAtH,CAFkC;;AAAA;AAEnDH,cAAAA,QAFmD;AAAA,gDAGlDA,QAHkD;;AAAA;AAAA;AAAA;AAAA,oBAKnD,IAAIC,KAAJ,CAAU,qCAAV,CALmD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO5D,GAxBY;AAyBPM,EAAAA,6BAzBO,yCAyBwBJ,sBAzBxB,EAyBgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAElCR,GAAG,CAACG,yBAAJ,CAA8BU,MAA9B,sCAAmEL,sBAAsB,CAACN,2BAA1F,EAFkC;;AAAA;AAEnDG,cAAAA,QAFmD;AAAA,gDAGlDA,QAHkD;;AAAA;AAAA;AAAA;AAAA,oBAKnD,IAAIC,KAAJ,CAAU,qCAAV,CALmD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO5D;AAhCY,CAAf","sourcesContent":["import API from '../config/connections'\n// property-nearby-landmarks\nexport default {\n  async getAPropertyNearbyLandmarkById (property_nearby_landmark_id) {\n    try {\n      const response = await API.propertyNearbyLandmarkApi.get(`/property-nearby-landmarks/${property_nearby_landmark_id}`)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when retrieving data')\n    }\n  },\n  async postAPropertyNearbyLandmark (propertyNearbyLandmark) {\n    try {\n      const response = await API.propertyNearbyLandmarkApi.post('/property-nearby-landmarks', propertyNearbyLandmark)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when sending data')\n    }\n  },\n  async updateAPropertyNearbyLandmark (propertyNearbyLandmark) {\n    try {\n      const response = await API.propertyNearbyLandmarkApi.put(`/property-nearby-landmarks/${propertyNearbyLandmark.property_nearby_landmark_id}`, propertyNearbyLandmark)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when updating data')\n    }\n  },\n  async deleteAPropertyNearbyLandmark (propertyNearbyLandmark) {\n    try {\n      const response = await API.propertyNearbyLandmarkApi.delete(`/property-nearby-landmarks/${propertyNearbyLandmark.property_nearby_landmark_id}`)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when deleting data')\n    }\n  }\n}\n"]}]}