{"remainingRequest":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js!/Users/tusimegodwin/Downloads/stanbic-properties/src/store/vendorsModule.js","dependencies":[{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/src/store/vendorsModule.js","mtime":1628751506489},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tusimegodwin/Downloads/stanbic-properties/src/store/vendorsModule.js"],"names":["vendorsBackOfficeService","state","vendorCategories","vendors","isLiked","getters","allVendorsCategories","allVendors","actions","fetchVendorsCategories","commit","getVendorsCategories","response","data","Error","postVendor","_","newVendor","postProfessional","likeVendor","likeAVendor","user_id","status","alert","unLikeVendor","unLikeAVendor","fetchVendors","getVendors","mutations","setVendorCategories","returnedVendorsCategories","map","vendorCategory","value","vendor_category_id","text","vendor_category_name","setVendors","returnedVendors","likeStatus"],"mappings":";;;AAAA,OAAOA,wBAAP,MAAqC,4CAArC;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,gBAAgB,EAAE,EADR;AAEVC,EAAAA,OAAO,EAAE,EAFC;AAGVC,EAAAA,OAAO,EAAE;AAHC,CAAd;AAMA,IAAMC,OAAO,GAAG;AACZC,EAAAA,oBAAoB,EAAE,8BAACL,KAAD;AAAA,WAAWA,KAAK,CAACC,gBAAjB;AAAA,GADV;AAEZK,EAAAA,UAAU,EAAE,oBAACN,KAAD;AAAA,WAAWA,KAAK,CAACE,OAAjB;AAAA,GAFA,CAGb;;AAHa,CAAhB;AAMA,IAAMK,OAAO,GAAG;AACNC,EAAAA,sBADM,wCAC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA;AAAA,qBAEVV,wBAAwB,CAACW,oBAAzB,EAFU;;AAAA;AAE3BC,cAAAA,QAF2B;AAGjCF,cAAAA,MAAM,CAAC,qBAAD,EAAwBE,QAAQ,CAACC,IAAjC,CAAN;AAHiC;AAAA;;AAAA;AAAA;AAAA;AAAA,oBAK3B,IAAIC,KAAJ,CAAU,mCAAV,CAL2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOxC,GARW;AASNC,EAAAA,UATM,sBASKC,CATL,EASQC,SATR,EASmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEAjB,wBAAwB,CAACkB,gBAAzB,CAA0CD,SAA1C,CAFA;;AAAA;AAEjBL,cAAAA,QAFiB;AAAA,gDAGhBA,QAHgB;;AAAA;AAAA;AAAA;AAAA,oBAKjB,IAAIE,KAAJ,CAAU,yCAAV,CALiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO9B,GAhBW;AAiBNK,EAAAA,UAjBM,sBAiBKH,CAjBL,EAiBQC,SAjBR,EAiBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEAjB,wBAAwB,CAACoB,WAAzB,CAAqCH,SAArC,EAA+CI,OAA/C,CAFA;;AAAA;AAEjBT,cAAAA,QAFiB;;AAGvB,kBAAIA,QAAQ,CAACU,MAAT,KAAoB,GAApB,IAA2BV,QAAQ,CAACU,MAAT,KAAoB,GAAnD,EAAwD;AAEpDZ,gBAAAA,MAAM,CAAC,YAAD,EAAe,IAAf,CAAN;AACDa,gBAAAA,KAAK,CAAC,OAAD,CAAL;AACF;;AAPsB,gDAQhBX,QARgB;;AAAA;AAAA;AAAA;AAAA,oBAUjB,IAAIE,KAAJ,CAAU,iCAAV,CAViB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAY9B,GA7BW;AA8BNU,EAAAA,YA9BM,wBA8BOR,CA9BP,EA8BUC,SA9BV,EA8BqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEFjB,wBAAwB,CAACyB,aAAzB,CAAuCR,SAAvC,CAFE;;AAAA;AAEnBL,cAAAA,QAFmB;;AAGzB,kBAAIA,QAAQ,CAACU,MAAT,KAAoB,GAApB,IAA2BV,QAAQ,CAACU,MAAT,KAAoB,GAAnD,EAAwD;AAEpDZ,gBAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AACH;;AANwB,gDAOlBE,QAPkB;;AAAA;AAAA;AAAA;AAAA,oBAUnB,IAAIE,KAAJ,CAAU,mCAAV,CAVmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYhC,GA1CW;AA4CNY,EAAAA,YA5CM,+BA4CmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVhB,cAAAA,MAAU,SAAVA,MAAU;AAAA;AAAA;AAAA,qBAEAV,wBAAwB,CAAC2B,UAAzB,EAFA;;AAAA;AAEjBf,cAAAA,QAFiB;AAGvBF,cAAAA,MAAM,CAAC,YAAD,EAAeE,QAAQ,CAACC,IAAxB,CAAN;AAHuB;AAAA;;AAAA;AAAA;AAAA;AAAA,oBAKjB,IAAIC,KAAJ,CAAU,mCAAV,CALiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO9B;AAnDW,CAAhB;AAsDA,IAAMc,SAAS,GAAG;AACdC,EAAAA,mBAAmB,EAAE,6BAAC5B,KAAD,EAAQ6B,yBAAR;AAAA,WAAuC7B,KAAK,CAACC,gBAAN,GAAyB4B,yBAAyB,CAACC,GAA1B,CAA8B,UAAAC,cAAc,EAAI;AACjI,aAAO;AACHC,QAAAA,KAAK,EAAED,cAAc,CAACE,kBADnB;AAEHC,QAAAA,IAAI,EAAEH,cAAc,CAACI;AAFlB,OAAP;AAIH,KALoF,CAAhE;AAAA,GADP;AAOdC,EAAAA,UAAU,EAAE,oBAACpC,KAAD,EAAQqC,eAAR;AAAA,WAA6BrC,KAAK,CAACE,OAAN,GAAgBmC,eAA7C;AAAA,GAPE;AAQdC,EAAAA,UAAU,EAAE,oBAACtC,KAAD,EAAQqB,MAAR;AAAA,WAAmBrB,KAAK,CAACG,OAAN,GAAgBkB,MAAnC;AAAA;AARE,CAAlB;AAWA,eAAe;AACXrB,EAAAA,KAAK,EAALA,KADW;AAEXI,EAAAA,OAAO,EAAPA,OAFW;AAGXG,EAAAA,OAAO,EAAPA,OAHW;AAIXoB,EAAAA,SAAS,EAATA;AAJW,CAAf","sourcesContent":["import vendorsBackOfficeService from '@/service/vendors/vendorsBackOfficeService';\n\nconst state = {\n    vendorCategories: [],\n    vendors: [],\n    isLiked: false\n}\n\nconst getters = {\n    allVendorsCategories: (state) => state.vendorCategories,\n    allVendors: (state) => state.vendors,\n   // likeState: state => state.isLiked,\n};\n\nconst actions = {\n    async fetchVendorsCategories({ commit }) {\n        try {\n            const response = await vendorsBackOfficeService.getVendorsCategories();\n            commit('setVendorCategories', response.data);\n        } catch (error) {\n            throw new Error(\"Failed on loading current Vendors\")\n        }\n    },\n    async postVendor(_, newVendor) {\n        try {\n            const response = await vendorsBackOfficeService.postProfessional(newVendor);\n            return response;\n        } catch (error) {\n            throw new Error(\"Failed on posting new profession sevice\")\n        }\n    },\n    async likeVendor(_, newVendor) {\n        try {\n            const response = await vendorsBackOfficeService.likeAVendor(newVendor,user_id);\n            if (response.status === 200 || response.status === 201) {\n\n                commit('likeStatus', true);\n               alert(\"Liked\")\n            }\n            return response;\n        } catch (error) {\n            throw new Error(\"Failed on liking current vendor\")\n        }\n    },\n    async unLikeVendor(_, newVendor) {\n        try {\n            const response = await vendorsBackOfficeService.unLikeAVendor(newVendor);\n            if (response.status === 200 || response.status === 201) {\n\n                commit('likeStatus', false);\n            }\n            return response;\n        }\n        catch (error) {\n            throw new Error(\"Failed on unliking current vendor\")\n        }\n    },\n\n    async fetchVendors({ commit }) {\n        try {\n            const response = await vendorsBackOfficeService.getVendors();\n            commit('setVendors', response.data);\n        } catch (error) {\n            throw new Error(\"Failed on loading current Vendors\")\n        }\n    },\n}\n\nconst mutations = {\n    setVendorCategories: (state, returnedVendorsCategories) => (state.vendorCategories = returnedVendorsCategories.map(vendorCategory => {\n        return {\n            value: vendorCategory.vendor_category_id,\n            text: vendorCategory.vendor_category_name\n        }\n    })),\n    setVendors: (state, returnedVendors) => (state.vendors = returnedVendors),\n    likeStatus: (state, status) => state.isLiked = status\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}