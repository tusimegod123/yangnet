{"remainingRequest":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js!/Users/tusimegodwin/Downloads/stanbic-properties/src/store/authModule.js","dependencies":[{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/src/store/authModule.js","mtime":1628751506488},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tusimegodwin/Downloads/stanbic-properties/src/store/authModule.js"],"names":["AuthService","decode","user","JSON","parse","localStorage","getItem","state","registeringUser","currentUser","isLoggedIn","is_seller","is_investor","is_product_developer","is_certified_seller","is_professional_service_provider","is_certified_product_developer","is_certified_investor","is_certified_professional_service_provider","getters","currentRegisteringUser","loginState","currentLoggedinUser","iAmASeller","iAmAInvestor","iAmAProductDeveloper","iAmACertifiedSeller","iAmAProfessionalServiceProvider","iAmACertifiedProductDeveloper","iAmACertifiedInvestor","iAmACertifiedProfessionalServiceProvider","actions","signupANewUser","newUser","commit","response","data","result","Error","login","userDetails","loggingUser","status","setItem","token","updateUser","_","updateUserProfile","console","log","fetchLoggedUser","toDecode","decoded","sub","loggedInUser","username","user_id","vendor_name","name","vendor_primary_phone_number","telephone","category_type","vendor_primary_email","email","vendor_secondary_phone_number","secondary_contact","vendor_secondary_email","secondary_email","business_location","roles","when_created","_seller","_investor","_product_developer","_certified_seller","_professional_service_provider","_certified_product_developer","_certified_investor","_certified_professional_service_provider","stringify","logout","removeItem","mutations","setRegisteredUser","returnedUser","setCurrentUser","loginStatus"],"mappings":"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","sourcesContent":["import AuthService from '@/service/authService';\nimport decode from \"jwt-decode\";\n\nconst user = JSON.parse(localStorage.getItem('currentUser')) || {};\n\nconst state = {\n    registeringUser: [],\n    currentUser: user,\n    isLoggedIn: !!localStorage.getItem('token'),\n    is_seller: user.is_seller,\n    is_investor: user.is_investor,\n    is_product_developer: user.is_product_developer,\n    is_certified_seller: user.is_certified_seller,\n    is_professional_service_provider: user.is_professional_service_provider,\n    is_certified_product_developer: user.is_certified_product_developer,\n    is_certified_investor: user.is_certified_investor,\n    is_certified_professional_service_provider: user.is_certified_professional_service_provider\n}\n\nconst getters = {\n    currentRegisteringUser: state => state.registeringUser,\n    loginState: state => state.isLoggedIn,\n    currentLoggedinUser: state => state.currentUser,\n    iAmASeller: state => state.is_seller,\n    iAmAInvestor: state => state.is_investor,\n    iAmAProductDeveloper: state => state.is_product_developer,\n    iAmACertifiedSeller: state => state.is_certified_seller,\n    iAmAProfessionalServiceProvider: state => state.is_professional_service_provider,\n    iAmACertifiedProductDeveloper: state => state.is_certified_product_developer,\n    iAmACertifiedInvestor: state => state.is_certified_investor,\n    iAmACertifiedProfessionalServiceProvider: state => state.is_certified_professional_service_provider\n};\n\nconst actions = {\n    async signupANewUser({ commit }, newUser) {\n        try {\n            const response = await AuthService.signupANewUser(newUser);\n            commit('setRegisteredUser', response.data.result);\n            return response;\n        } catch (error) {\n            throw new Error(\"Failed on saved new User\");\n        }\n    },\n    async login({ commit }, userDetails) {\n        try {\n            const response = await AuthService.loggingUser(userDetails);\n            if (response.status === 200 || response.status === 201) {\n                localStorage.setItem('token', response.data.token);\n                commit('loginStatus', true);\n            }\n            return response;\n        } catch (error) {\n            throw new Error('An error occured when sending data');\n        }\n    },\n    async updateUser(_, userDetails) {\n        try {\n            const response = await AuthService.updateUserProfile(userDetails);\n            return response;\n        } catch (error) {\n            console.log(error);\n            // throw new Error('An error occured when sending data');\n        }\n    },\n    async fetchLoggedUser({ commit }) {\n        try {\n            const toDecode = localStorage.getItem('token');\n            const decoded = await decode(toDecode);\n            const response = await AuthService.fetchLoggedUser(decoded.sub);\n            if (response.status === 200 || response.status === 200) {\n\n                const loggedInUser = {\n                    username: response.data.result.username,\n                    user_id: response.data.result.user_id,\n                    vendor_name: response.data.result.name,\n                    vendor_primary_phone_number: response.data.result.telephone,\n                    category_type: response.data.result.category_type,\n                    vendor_primary_email: response.data.result.email,\n                    vendor_secondary_phone_number: response.data.result.secondary_contact,\n                    vendor_secondary_email: response.data.result.secondary_email,\n                    business_location: response.data.result.business_location,\n                    roles: response.data.result.roles,\n                    when_created: response.data.result.when_created,\n                    is_seller: response.data.result._seller,\n                    is_investor: response.data.result._investor,\n                    is_product_developer: response.data.result._product_developer,\n                    is_certified_seller: response.data.result._certified_seller,\n                    is_professional_service_provider: response.data.result._professional_service_provider,\n                    is_certified_product_developer: response.data.result._certified_product_developer,\n                    is_certified_investor: response.data.result._certified_investor,\n                    is_certified_professional_service_provider: response.data.result._certified_professional_service_provider\n                }\n                localStorage.setItem('currentUser', JSON.stringify(loggedInUser));\n                commit(\"setCurrentUser\", loggedInUser);\n            }\n            return response;\n        } catch (error) {\n            throw new Error(error);\n        }\n    },\n    async logout({ commit }) {\n        try {\n            localStorage.removeItem('token');\n            localStorage.removeItem('currentUser');\n            await commit('loginStatus', false);\n            await commit('setCurrentUser', {});\n        }\n        catch (error) {\n            throw new Error(error);\n        }\n    }\n}\n\nconst mutations = {\n    setRegisteredUser: (state, returnedUser) => (state.registeringUser = returnedUser),\n    setCurrentUser: (state, currentUser) => state.currentUser = currentUser,\n    loginStatus: (state, status) => state.isLoggedIn = status\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}