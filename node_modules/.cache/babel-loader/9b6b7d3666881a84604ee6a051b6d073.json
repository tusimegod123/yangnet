{"remainingRequest":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js!/Users/tusimegodwin/Downloads/stanbic-properties/src/service/propertyLocation.js","dependencies":[{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/src/service/propertyLocation.js","mtime":1628227685715},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tusimegodwin/Downloads/stanbic-properties/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy90dXNpbWVnb2R3aW4vRG93bmxvYWRzL3N0YW5iaWMtcHJvcGVydGllcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IEFQSSBmcm9tICcuLi9jb25maWcvY29ubmVjdGlvbnMnOwpleHBvcnQgZGVmYXVsdCB7CiAgZ2V0QWxsUHJvcGVydHlMb2NhdGlvbnM6IGZ1bmN0aW9uIGdldEFsbFByb3BlcnR5TG9jYXRpb25zKCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEFQSS5wcm9wZXJ0eUxvY2F0aW9uQXBpLmdldCgnL3Byb3BlcnR5LWxvY2F0aW9ucycpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDc7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FuIGVycm9yIG9jY3VyZWQgd2hlbiByZXRyaWV2aW5nIGRhdGEnKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgN11dKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0UHJvcGVydHlMb2NhdGlvbkJ5SWQ6IGZ1bmN0aW9uIGdldFByb3BlcnR5TG9jYXRpb25CeUlkKGxvY2F0aW9uX2lkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEFQSS5wcm9wZXJ0eUxvY2F0aW9uQXBpLmdldCgiL3Byb3BlcnR5LWxvY2F0aW9ucy8iLmNvbmNhdChsb2NhdGlvbl9pZCkpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDc7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQW4gZXJyb3Igb2NjdXJlZCB3aGVuIHJldHJpZXZpbmcgZGF0YScpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDddXSk7CiAgICB9KSkoKTsKICB9LAogIHBvc3RBUHJvcGVydHlMb2NhdGlvbjogZnVuY3Rpb24gcG9zdEFQcm9wZXJ0eUxvY2F0aW9uKGxvY2F0aW9uKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEFQSS5wcm9wZXJ0eUxvY2F0aW9uQXBpLnBvc3QoJy9wcm9wZXJ0eS1sb2NhdGlvbnMnLCBsb2NhdGlvbik7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNzsKICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBbiBlcnJvciBvY2N1cmVkIHdoZW4gc2VuZGluZyBkYXRhJyk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMCwgN11dKTsKICAgIH0pKSgpOwogIH0sCiAgdXBkYXRlQVByb3BlcnR5TG9jYXRpb246IGZ1bmN0aW9uIHVwZGF0ZUFQcm9wZXJ0eUxvY2F0aW9uKGxvY2F0aW9uKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEFQSS5wcm9wZXJ0eUxvY2F0aW9uQXBpLnB1dCgiL3Byb3BlcnR5LWxvY2F0aW9ucy8iLmNvbmNhdChsb2NhdGlvbi5sb2NhdGlvbl9pZCksIGxvY2F0aW9uKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSA3OwogICAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FuIGVycm9yIG9jY3VyZWQgd2hlbiB1cGRhdGluZyBkYXRhJyk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTQsIG51bGwsIFtbMCwgN11dKTsKICAgIH0pKSgpOwogIH0sCiAgZGVsZXRlQVByb3BlcnR5TG9jYXRpb246IGZ1bmN0aW9uIGRlbGV0ZUFQcm9wZXJ0eUxvY2F0aW9uKGxvY2F0aW9uKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEFQSS5wcm9wZXJ0eUxvY2F0aW9uQXBpLmRlbGV0ZSgiL3Byb3BlcnR5LWxvY2F0aW9ucy8iLmNvbmNhdChsb2NhdGlvbi5sb2NhdGlvbl9pZCkpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ1LnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBfY29udGV4dDUucHJldiA9IDc7CiAgICAgICAgICAgICAgX2NvbnRleHQ1LnQwID0gX2NvbnRleHQ1WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQW4gZXJyb3Igb2NjdXJlZCB3aGVuIGRlbGV0aW5nIGRhdGEnKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNSwgbnVsbCwgW1swLCA3XV0pOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/tusimegodwin/Downloads/stanbic-properties/src/service/propertyLocation.js"],"names":["API","getAllPropertyLocations","propertyLocationApi","get","response","Error","getPropertyLocationById","location_id","postAPropertyLocation","location","post","updateAPropertyLocation","put","deleteAPropertyLocation","delete"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,uBAAhB;AAEA,eAAe;AACPC,EAAAA,uBADO,qCACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEND,GAAG,CAACE,mBAAJ,CAAwBC,GAAxB,CAA4B,qBAA5B,CAFM;;AAAA;AAEvBC,cAAAA,QAFuB;AAAA,+CAGtBA,QAHsB;;AAAA;AAAA;AAAA;AAAA,oBAKvB,IAAIC,KAAJ,CAAU,uCAAV,CALuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhC,GARY;AASPC,EAAAA,uBATO,mCASkBC,WATlB,EAS+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEjBP,GAAG,CAACE,mBAAJ,CAAwBC,GAAxB,+BAAmDI,WAAnD,EAFiB;;AAAA;AAElCH,cAAAA,QAFkC;AAAA,gDAGjCA,QAHiC;;AAAA;AAAA;AAAA;AAAA,oBAKlC,IAAIC,KAAJ,CAAU,uCAAV,CALkC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO3C,GAhBY;AAiBPG,EAAAA,qBAjBO,iCAiBgBC,QAjBhB,EAiB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEZT,GAAG,CAACE,mBAAJ,CAAwBQ,IAAxB,CAA6B,qBAA7B,EAAoDD,QAApD,CAFY;;AAAA;AAE7BL,cAAAA,QAF6B;AAAA,gDAG5BA,QAH4B;;AAAA;AAAA;AAAA;AAAA,oBAK7B,IAAIC,KAAJ,CAAU,oCAAV,CAL6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOtC,GAxBY;AAyBPM,EAAAA,uBAzBO,mCAyBkBF,QAzBlB,EAyB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEdT,GAAG,CAACE,mBAAJ,CAAwBU,GAAxB,+BAAmDH,QAAQ,CAACF,WAA5D,GAA2EE,QAA3E,CAFc;;AAAA;AAE/BL,cAAAA,QAF+B;AAAA,gDAG9BA,QAH8B;;AAAA;AAAA;AAAA;AAAA,oBAK/B,IAAIC,KAAJ,CAAU,qCAAV,CAL+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOxC,GAhCY;AAiCPQ,EAAAA,uBAjCO,mCAiCkBJ,QAjClB,EAiC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEdT,GAAG,CAACE,mBAAJ,CAAwBY,MAAxB,+BAAsDL,QAAQ,CAACF,WAA/D,EAFc;;AAAA;AAE/BH,cAAAA,QAF+B;AAAA,gDAG9BA,QAH8B;;AAAA;AAAA;AAAA;AAAA,oBAK/B,IAAIC,KAAJ,CAAU,qCAAV,CAL+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOxC;AAxCY,CAAf","sourcesContent":["import API from '../config/connections'\n\nexport default {\n  async getAllPropertyLocations () {\n    try {\n      const response = await API.propertyLocationApi.get('/property-locations')\n      return response\n    } catch (error) {\n      throw new Error('An error occured when retrieving data')\n    }\n  },\n  async getPropertyLocationById (location_id) {\n    try {\n      const response = await API.propertyLocationApi.get(`/property-locations/${location_id}`)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when retrieving data')\n    }\n  },\n  async postAPropertyLocation (location) {\n    try {\n      const response = await API.propertyLocationApi.post('/property-locations', location)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when sending data')\n    }\n  },\n  async updateAPropertyLocation (location) {\n    try {\n      const response = await API.propertyLocationApi.put(`/property-locations/${location.location_id}`, location)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when updating data')\n    }\n  },\n  async deleteAPropertyLocation (location) {\n    try {\n      const response = await API.propertyLocationApi.delete(`/property-locations/${location.location_id}`)\n      return response\n    } catch (error) {\n      throw new Error('An error occured when deleting data')\n    }\n  }\n}\n"]}]}